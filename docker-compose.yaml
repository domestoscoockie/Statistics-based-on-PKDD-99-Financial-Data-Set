
services:
  web:
    build: .
    ports:
      - "80:5000"
    volumes:
      - .:/code
    environment:
      FLASK_DEBUG: "0"
    depends_on:
      - db
    command: ["sh", "-c", "./wait-for-it.sh db:5432 -- python /code/app.py && tail -f /dev/null"]

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_2: ${POSTGRES_DB_2}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  db_init:
    build:
      context: .
      dockerfile: dockerfile.init
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_2: ${POSTGRES_DB_2}
    volumes:
      - .:/code
    command: ["sh", "-c", "./wait-for-it.sh db:5432 -- python /code/create_db_app.py"]
    restart: "no"

volumes:
  db_data:
